name: .NET Build and Test with Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'   # or 8.0.x based on your project target

      # 3Ô∏è‚É£ Restore dependencies
      - name: Restore dependencies
        run: dotnet restore CalculatorApp.sln

      # 4Ô∏è‚É£ Build the solution
      - name: Build solution
        run: dotnet build CalculatorApp.sln --no-restore --configuration Release

      # 5Ô∏è‚É£ Run unit tests with coverage (MSBuild integration)
      - name: Run tests with coverage
  shell: bash
  run: |
    mkdir -p TestResults/coverage

    echo "üß™ Searching for test projects..."
    find . -type f -name "*.Tests.csproj"

    while IFS= read -r proj; do
      echo "‚û°Ô∏è Running tests for $proj"
      dotnet test "$proj" \
        --no-build \
        --configuration Release \
        /p:CollectCoverage=true \
        /p:CoverletOutput=../../TestResults/coverage/ \
        /p:CoverletOutputFormat=cobertura
    done < <(find . -type f -name "*.Tests.csproj")

    echo "üîç Checking for coverage file..."
    find ./TestResults -name "coverage.cobertura.xml" || true

    if [ ! -f ./TestResults/coverage/coverage.cobertura.xml ]; then
      echo "‚ùå coverage.cobertura.xml NOT FOUND!"
      exit 1
    else
      echo "‚úÖ coverage.cobertura.xml FOUND!"
    fi

      # 6Ô∏è‚É£ Generate coverage report (HTML + Cobertura)
      - name: Generate coverage report
        uses: danielpalme/ReportGenerator-GitHub-Action@5.3.8
        with:
          reports: './TestResults/coverage/coverage.cobertura.xml'
          targetdir: './CodeCoverageReport'
          reporttypes: 'HtmlSummary;Cobertura'

      #
